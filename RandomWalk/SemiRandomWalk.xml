<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.5//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_5.dtd'>
<nta>
	<declaration>import "/home/asger/Documents/Files/AAU/10.Semester/Speciale/Speciale-Code/RandomWalk/CLib/libshield.so"
{
    bool must_go_fast(double x, double t);
    int testytest(double ix, double it);
};

// Use this to toggle shield
const bool disable_shield = false;

broadcast chan fast, slow;

clock cl;

double x=0.0;
double t=0.0;
double epsilon = 0.04;
double delta_fast = 0.17; 
double tau_fast = 0.05;
double delta_slow = 0.1;
double tau_slow = 0.12;


int counterSlow, counterFast;
void updateFast()
{
    if (x&lt;=1 and t &lt;=1)
    {
        x = x + delta_fast - epsilon + random(2*epsilon); 
        t = t + tau_fast - epsilon + random(2*epsilon);
    }
}


void updateSlow()
{

    if (x&lt;=1 and t &lt;=1)
    {
        x = x + delta_slow - epsilon + random(2*epsilon); 
        t = t + tau_slow - epsilon + random(2*epsilon);
    }
}</declaration>
	<template>
		<name x="5" y="5">Template</name>
		<declaration>// Place local declarations here.
</declaration>
		<location id="id0" x="-8" y="-93">
			<committed/>
		</location>
		<location id="id1" x="0" y="255">
			<committed/>
		</location>
		<location id="id2" x="102" y="340">
		</location>
		<init ref="id0"/>
		<transition id="id3" controllable="false">
			<source ref="id1"/>
			<target ref="id2"/>
			<label kind="guard" x="-59" y="348">t &gt; 1 || x &gt; 1</label>
			<nail x="-68" y="340"/>
		</transition>
		<transition id="id4" controllable="false">
			<source ref="id1"/>
			<target ref="id0"/>
			<label kind="guard" x="-76" y="-8">t &lt;= 1 &amp;&amp; x &lt;= 1</label>
		</transition>
		<transition id="id5">
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-467" y="-51">disable_shield || !must_go_fast(x, t)</label>
			<label kind="synchronisation" x="-212" y="-25">slow!</label>
			<label kind="assignment" x="-391" y="0">updateSlow(), counterSlow++</label>
			<nail x="-153" y="-93"/>
			<nail x="-153" y="76"/>
		</transition>
		<transition id="id6">
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="synchronisation" x="170" y="-25">fast!</label>
			<label kind="assignment" x="170" y="0">updateFast(), counterFast ++</label>
			<nail x="153" y="-93"/>
			<nail x="153" y="85"/>
		</transition>
	</template>
	<system>// Place template instantiations here.
Process = Template();
// List one or more processes to be composed into a system.
system Process;
</system>
	<queries>
		<query>
			<formula>strategy GoFast = minE ((t&gt;=1.0)*15.0 + counterSlow + counterFast*3) [#&lt;=30] {} -&gt; {x, t} : &lt;&gt; x&gt;=1 or t&gt;=1</formula>
			<comment/>
		</query>
		<query>
			<formula>Pr[#&lt;=30](&lt;&gt; x&gt;=1) under GoFast</formula>
			<comment/>
		</query>
		<query>
			<formula>Pr[#&lt;=30](&lt;&gt; x&gt;=1) </formula>
			<comment/>
		</query>
		<query>
			<formula>simulate 100 [#&lt;=30] {
    x,t
}</formula>
			<comment/>
		</query>
		<query>
			<formula>simulate 100 [#&lt;=30] {
    x,t, counterSlow, counterFast
} under GoFast</formula>
			<comment/>
		</query>
		<query>
			<formula>saveStrategy("/home/rgc/Documents/Files/AAU/10.Semester/Speciale/Speciale-Code/GoFast.strategy.json",GoFast)
	    </formula>
			<comment/>
		</query>
		<query>
			<formula>E[#&lt;=30;100] (max: (t&gt;=1.0)*15.0 + counterSlow + counterFast*3) under GoFast</formula>
			<comment/>
		</query>
		<query>
			<formula>E[#&lt;=30;100] (max: (t&gt;=1.0)*15.0 + counterSlow + counterFast*3)</formula>
			<comment/>
		</query>
	</queries>
</nta>
